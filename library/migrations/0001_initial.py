# Generated by Django 2.0.1 on 2018-01-18 20:58

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('nationality', models.CharField(max_length=30)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('image', models.FileField(null=True, upload_to='')),
            ],
            options={
                'verbose_name_plural': 'Artist',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PlayedSongs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played', models.DateTimeField(db_index=True, verbose_name='Song played time')),
            ],
            options={
                'verbose_name_plural': 'PlayedSongs',
                'ordering': ('played',),
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Playlist',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='PlaylistSong',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now=True, db_index=True)),
                ('active', models.BooleanField(db_index=True, default=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='playlist', to='library.Playlist')),
            ],
            options={
                'verbose_name_plural': 'PlaylistSong',
                'ordering': ('added',),
                'get_latest_by': 'added',
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50)),
                ('year', models.DateField(db_index=True, null=True)),
                ('duration', models.TimeField(db_index=True, verbose_name='the length of the song')),
                ('source', models.CharField(choices=[('FILE', 'file'), ('YOUTUBE', 'youtube')], max_length=7)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('enable', models.BooleanField(db_index=True, default=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='songs', to='library.Artist')),
            ],
            options={
                'verbose_name_plural': 'Song',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='playlistsong',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='song', to='library.Song'),
        ),
        migrations.AddField(
            model_name='playedsongs',
            name='song',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='played_song', to='library.Song'),
        ),
        migrations.AlterUniqueTogether(
            name='song',
            unique_together={('name', 'artist')},
        ),
        migrations.AlterUniqueTogether(
            name='playlistsong',
            unique_together={('playlist', 'song')},
        ),
    ]
